"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.uploadSingleFile=exports.connectDb=exports.LoggedInUserOnly=void 0;var _mongoose=_interopRequireDefault(require("mongoose")),_jsonwebtoken=_interopRequireDefault(require("jsonwebtoken")),_cloudinary=require("cloudinary"),_promises=_interopRequireDefault(require("fs/promises"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}_cloudinary.v2.config({cloud_name:"dqr2mxlv3",api_key:"847423956334364",api_secret:"ueGE5KG28uAXIpw-JSVnE6P8omM"});var connectDb=function(){_mongoose.default.connect("mongodb://127.0.0.1:27017/sunidhiDb").then(function(e){console.log("Database is connected with host:-".concat(e.connection.host))}).catch(function(e){console.log("************** Database is not connected ***************** ",e)})};exports.connectDb=connectDb;var LoggedInUserOnly=function(e,n,r){var o=e.cookies["test-token"];if(!o)return n.status(401).json({success:!1,message:"Unauthorized user,please login !"});var t=_jsonwebtoken.default.verify(o,"your-secret-key");e.user=t.userId,r()};exports.LoggedInUserOnly=LoggedInUserOnly;var uploadSingleFile=function(n,r){var o,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,n.file){e.next=3;break}return e.abrupt("return",r.status(400).send("No file uploaded"));case 3:return e.next=5,regeneratorRuntime.awrap(_cloudinary.v2.uploader.upload(n.file.path,{folder:"avatars"}));case 5:return o=e.sent,e.next=8,regeneratorRuntime.awrap(_promises.default.unlink(n.file.path));case 8:return t=new File({originalName:n.file.originalname,fileName:o.public_id,filePath:o.secure_url,size:n.file.size,mimeType:n.file.mimetype}),e.next=11,regeneratorRuntime.awrap(t.save());case 11:return e.abrupt("return",o);case 14:e.prev=14,e.t0=e.catch(0),console.error("Error uploading file:",e.t0),r.status(500).send("An error occurred while uploading the file");case 18:case"end":return e.stop()}},null,null,[[0,14]])};exports.uploadSingleFile=uploadSingleFile;
//# sourceMappingURL=db.min.js.map
