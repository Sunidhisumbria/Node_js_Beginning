{"version":3,"sources":["user.js"],"names":["userSchema","Schema","name","type","String","email","unique","phone","password","required","select","fileSchema","originalName","fileName","filePath","size","Number","mimeType","uploadedBy","Types","ObjectId","ref","uploadDate","Date","now","timestamps","User","File"],"mappings":";;;;;;;AAAA;;AAGA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC1BC,EAAAA,IAAI,EAAC;AAACC,IAAAA,IAAI,EAACC;AAAN,GADqB;AAE1BC,EAAAA,KAAK,EAAC;AAACF,IAAAA,IAAI,EAACC,MAAN;AAAaE,IAAAA,MAAM,EAAC;AAApB,GAFoB;AAG1BC,EAAAA,KAAK,EAAC;AAACJ,IAAAA,IAAI,EAACC;AAAN,GAHoB;AAI1BI,EAAAA,QAAQ,EAAC;AAACL,IAAAA,IAAI,EAACC,MAAN;AAAaK,IAAAA,QAAQ,EAAC,IAAtB;AAA2BC,IAAAA,MAAM,EAAC;AAAlC;AAJiB,CAAX,CAAnB;AASA,IAAMC,UAAU,GAAG,IAAIV,gBAAJ,CACf;AACEW,EAAAA,YAAY,EAAE;AAAET,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,QAAQ,EAAE;AAA1B,GADhB;AAEEI,EAAAA,QAAQ,EAAE;AAAEV,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,QAAQ,EAAE;AAA1B,GAFZ;AAGEK,EAAAA,QAAQ,EAAE;AAAEX,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,QAAQ,EAAE;AAA1B,GAHZ;AAIEM,EAAAA,IAAI,EAAE;AAAEZ,IAAAA,IAAI,EAAEa,MAAR;AAAgBP,IAAAA,QAAQ,EAAE;AAA1B,GAJR;AAKEQ,EAAAA,QAAQ,EAAE;AAAEd,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,QAAQ,EAAE;AAA1B,GALZ;AAMES,EAAAA,UAAU,EAAE;AAAEf,IAAAA,IAAI,EAAEF,iBAAOkB,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GANd;AAOEC,EAAAA,UAAU,EAAE;AAAEnB,IAAAA,IAAI,EAAEoB,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAPd,CADe,EAUf;AACEC,EAAAA,UAAU,EAAE;AADd,CAVe,CAAnB;AAcO,IAAOC,IAAI,GAAG,qBAAM,OAAN,EAAc1B,UAAd,CAAd;;AACA,IAAM2B,IAAI,GAAG,qBAAM,OAAN,EAAehB,UAAf,CAAb,C,CAEP","sourcesContent":["import {Schema,model} from \"mongoose\";\r\n\r\n\r\nconst userSchema = new Schema({\r\n    name:{type:String,},\r\n    email:{type:String,unique:true},\r\n    phone:{type:String},\r\n    password:{type:String,required:true,select:false}\r\n\r\n});\r\n\r\n\r\nconst fileSchema = new Schema(\r\n    {\r\n      originalName: { type: String, required: true }, \r\n      fileName: { type: String, required: true }, \r\n      filePath: { type: String, required: true }, \r\n      size: { type: Number, required: true }, \r\n      mimeType: { type: String, required: true }, \r\n      uploadedBy: { type: Schema.Types.ObjectId, ref: \"users\" }, \r\n      uploadDate: { type: Date, default: Date.now }, \r\n    },\r\n    {\r\n      timestamps: true, \r\n    })\r\n\r\nexport const  User = model(\"users\",userSchema) ;\r\nexport const File = model(\"files\", fileSchema);\r\n\r\n// const \r\n"],"file":"user.dev.js"}